<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" x:Class="ServiceBusMQManager.App"
             StartupUri="MainWindow.xaml"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             >
    <Application.Resources>
        <ResourceDictionary>
        	<ResourceDictionary.MergedDictionaries>
        		<ResourceDictionary Source="Simple Styles.xaml"/>
        	</ResourceDictionary.MergedDictionaries>
            
            <ControlTemplate
                x:Key="ChromeButtonControlTemplate"
                TargetType="{x:Type ButtonBase}">
                <Border
                    x:Name="Chrome"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    Margin="0"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                    <ContentPresenter
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Margin="{TemplateBinding Padding}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger
                        Property="IsEnabled"
                        Value="False">
                        <Setter
                            Property="Foreground"
                            Value="#FFADADAD" />
                        <Setter
                            Property="Opacity"
                            TargetName="Chrome"
                            Value="0.5" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style
                x:Key="ChromeButtonStyle"
                TargetType="{x:Type Button}">
                <Style.Resources>
                    <Storyboard
                        x:Key="OnMouseDownStoryboard">
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="{x:Null}">
                            <EasingDoubleKeyFrame
                                KeyTime="0"
                                Value="0.5" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                    <Storyboard
                        x:Key="OnMouseUpStoryboard">
                        <DoubleAnimationUsingKeyFrames
                            Storyboard.TargetProperty="(UIElement.Opacity)"
                            Storyboard.TargetName="{x:Null}">
                            <EasingDoubleKeyFrame
                                KeyTime="0"
                                Value="1" />
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </Style.Resources>
                <Setter
                    Property="Background"
                    Value="#00000000" />
                <Setter
                    Property="BorderBrush"
                    Value="{x:Null}" />
                <Setter
                    Property="BorderThickness"
                    Value="0" />
                <Setter
                    Property="Padding"
                    Value="0" />
                <Setter
                    Property="Cursor"
                    Value="Hand" />
                <Setter
                    Property="Template"
                    Value="{StaticResource ChromeButtonControlTemplate}" />
                <Style.Triggers>
                    <Trigger
                        Property="IsEnabled"
                        Value="False">
                        <Setter
                            Property="Opacity"
                            Value="0.5" />
                    </Trigger>
                    <EventTrigger
                        RoutedEvent="Mouse.PreviewMouseDown">
                        <BeginStoryboard
                            x:Name="OnMouseDown_BeginStoryboard"
                            Storyboard="{StaticResource OnMouseDownStoryboard}" />
                    </EventTrigger>
                    <EventTrigger
                        RoutedEvent="Mouse.PreviewMouseUp">
                        <BeginStoryboard
                            x:Name="OnMouseUp_BeginStoryboard"
                            Storyboard="{StaticResource OnMouseUpStoryboard}" />
                    </EventTrigger>
                </Style.Triggers>
            </Style>


        	<Style x:Key="ComboBoxFocusVisual">
        		<Setter Property="Control.Template">
        			<Setter.Value>
        				<ControlTemplate>
        					<Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>


        	<Style x:Key="ComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
        		<Setter Property="MinWidth" Value="0"/>
        		<Setter Property="MinHeight" Value="0"/>
        		<Setter Property="Width" Value="Auto"/>
        		<Setter Property="Height" Value="Auto"/>
        		<Setter Property="Background" Value="Transparent"/>
        		<Setter Property="BorderBrush" Value="Transparent"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ToggleButton}">
        					<DockPanel Background="{TemplateBinding Background}" LastChildFill="false" SnapsToDevicePixels="true">
        						<Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderStyle="AltRaised" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
        							<Path Data="{StaticResource DownArrowGeometry}" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        						</Themes:ClassicBorderDecorator>
        					</DockPanel>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsChecked" Value="true">
        							<Setter Property="BorderStyle" TargetName="Border" Value="AltPressed"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        		<Style.Triggers>
        			<Trigger Property="IsEnabled" Value="false">
        				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        			</Trigger>
        		</Style.Triggers>
        	</Style>
        	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        		<Setter Property="OverridesDefaultStyle" Value="true"/>
        		<Setter Property="AllowDrop" Value="true"/>
        		<Setter Property="MinWidth" Value="0"/>
        		<Setter Property="MinHeight" Value="0"/>
        		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type TextBox}">
        					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        		<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        			<Grid>
        				<Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="Yellow" BorderThickness="1" BorderStyle="Sunken" Background="Green">
        					<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        						<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}">
        							<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        								<ScrollViewer>
        									<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        								</ScrollViewer>
        							</Border>
        						</Themes:SystemDropShadowChrome>
        					</Popup>
        				</Themes:ClassicBorderDecorator>
        				<ToggleButton ClickMode="Press" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Style="{StaticResource ComboBoxTransparentButtonStyle}" Width="Auto"/>
        				<DockPanel Margin="2">
        					<FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        					<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        				</DockPanel>
        			</Grid>
        		</Border>
        		<ControlTemplate.Triggers>
        			<Trigger Property="HasItems" Value="false">
        				<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
        			</Trigger>
        			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        			</Trigger>
        			<Trigger Property="IsEnabled" Value="false">
        				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        			</Trigger>
        			<Trigger Property="IsGrouping" Value="true">
        				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        			</Trigger>
        		</ControlTemplate.Triggers>
        	</ControlTemplate>
        	<Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        		<Setter Property="Margin" Value="0,0,0,0"/>
        		<Setter Property="Padding" Value="2,1"/>
        		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        		<Setter Property="VerticalContentAlignment" Value="Center"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type ComboBox}">
        					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
        						<Grid>
        							<Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="White" BorderThickness="1" BorderStyle="None" Background="White">
        								<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        									<Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}">
        										<Border x:Name="DropDownBorder" BorderBrush="Blue" BorderThickness="1" Background="White">
        											<ScrollViewer>
        												<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        											</ScrollViewer>
        										</Border>
        									</Themes:SystemDropShadowChrome>
        								</Popup>
        							</Themes:ClassicBorderDecorator>
        							<DockPanel Margin="2">
        								<FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
        								<Border x:Name="SelectedItemBorder" Margin="{TemplateBinding Padding}">
        									<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        								</Border>
        							</DockPanel>
        							<ToggleButton ClickMode="Press" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Style="{StaticResource ComboBoxTransparentButtonStyle}" Width="Auto"/>
        						</Grid>
        					</Border>
        					<ControlTemplate.Triggers>
        						<MultiTrigger>
        							<MultiTrigger.Conditions>
        								<Condition Property="IsSelectionBoxHighlighted" Value="true"/>
        								<Condition Property="IsDropDownOpen" Value="false"/>
        							</MultiTrigger.Conditions>
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
        							<Setter Property="BorderBrush" Value="Blue"/>
        						</MultiTrigger>
        						<Trigger Property="IsSelectionBoxHighlighted" Value="true">
        							<Setter Property="Background" TargetName="SelectedItemBorder" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
        							<Setter Property="BorderBrush" Value="Blue"/>
        						</Trigger>
        						<Trigger Property="HasItems" Value="false">
        							<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="false">
        							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        						</Trigger>
        						<Trigger Property="IsGrouping" Value="true">
        							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        						</Trigger>
        						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
        							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
        							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        		<Style.Triggers>
        			<Trigger Property="IsEditable" Value="true">
        				<Setter Property="IsTabStop" Value="false"/>
        				<Setter Property="Padding" Value="1"/>
        				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
        			</Trigger>
        		</Style.Triggers>
        	</Style>


        </ResourceDictionary>
    </Application.Resources>
</Application>
